#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Match keyboard layout with the locale
riverctl keyboard-layout fi

# Enable natural scrolling
riverctl input 'pointer-2-14-ETPS/2_Elantech_Touchpad' natural-scroll enabled

# Enable touchpad tapping
riverctl input 'pointer-2-14-ETPS/2_Elantech_Touchpad' tap enabled

# Hide cursor when not in use
#riverctl hide-cursor timeout 1000
riverctl hide-cursor when-typing enabled

# Mod1+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Mod1+Shift Return spawn foot
riverctl map normal Mod1+Shift B spawn firefox

# Mod1+Q to close the focused view
riverctl map normal Mod1 Q close

# Mod1+Shift+E to exit river
riverctl map normal Mod1+Shift E exit

# Mod1+J and Mod1+K to focus the next/previous view in the layout stack
riverctl map normal Mod1 J focus-view next
riverctl map normal Mod1 K focus-view previous

# Mod1+Shift+J and Mod1+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Mod1+Shift J swap next
riverctl map normal Mod1+Shift K swap previous

# Mod1+Period and Mod1+Comma to focus the next/previous output
riverctl map normal Mod1 Period focus-output next
riverctl map normal Mod1 Comma focus-output previous

# Mod1+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Mod1+Shift Period send-to-output next
riverctl map normal Mod1+Shift Comma send-to-output previous

# Mod1+Return to bump the focused view to the top of the layout stack
riverctl map normal Mod1 Return zoom

# Mod1+H and Mod1+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Mod1 H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Mod1 L send-layout-cmd rivertile "main-ratio +0.05"

# Mod1+Shift+H and Mod1+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Mod1+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Mod1+Shift L send-layout-cmd rivertile "main-count -1"

# Mod1+Alt+{H,J,K,L} to move views
riverctl map normal Mod1+Alt H move left 100
riverctl map normal Mod1+Alt J move down 100
riverctl map normal Mod1+Alt K move up 100
riverctl map normal Mod1+Alt L move right 100

# Mod1+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Mod1+Alt+Control H snap left
riverctl map normal Mod1+Alt+Control J snap down
riverctl map normal Mod1+Alt+Control K snap up
riverctl map normal Mod1+Alt+Control L snap right

# Mod1+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Mod1+Alt+Shift H resize horizontal -100
riverctl map normal Mod1+Alt+Shift J resize vertical 100
riverctl map normal Mod1+Alt+Shift K resize vertical -100
riverctl map normal Mod1+Alt+Shift L resize horizontal 100

# Mod1 + Left Mouse Button to move views
riverctl map-pointer normal Mod1 BTN_LEFT move-view

# Mod1 + Right Mouse Button to resize views
riverctl map-pointer normal Mod1 BTN_RIGHT resize-view

# Mod1 + Middle Mouse Button to toggle float
riverctl map-pointer normal Mod1 BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod1+[1-9] to focus tag [0-8]
    riverctl map normal Mod1 $i set-focused-tags $tags

    # Mod1+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Mod1+Shift $i set-view-tags $tags

    # Mod1+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Mod1+Control $i toggle-focused-tags $tags

    # Mod1+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Mod1+Shift+Control $i toggle-view-tags $tags
done

# Mod1+0 to focus all tags
# Mod1+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Mod1 0 set-focused-tags $all_tags
riverctl map normal Mod1+Shift 0 set-view-tags $all_tags

# Mod1+Space to toggle float
riverctl map normal Mod1 Space toggle-float

# Mod1+F to toggle fullscreen
riverctl map normal Mod1 F toggle-fullscreen

# Mod1+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Mod1 Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Mod1 Right send-layout-cmd rivertile "main-location right"
riverctl map normal Mod1 Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Mod1 Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod1+F11 to enter passthrough mode
riverctl map normal Mod1 F11 enter-mode passthrough

# Mod1+F11 to return to normal mode
riverctl map passthrough Mod1 F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl -e set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl -e set 5%-'
done

# Set background and border color
riverctl background-color 0x000000
riverctl border-width     0

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile

# Start programs
riverctl spawn 'rivertile -view-padding 0 -outer-padding 0'
riverctl spawn wpaperd
riverctl spawn waybar
